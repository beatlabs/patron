version: "3.8"
services:
  kafka:
    image: bitnami/kafka:3.4
    hostname: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,EXTERNAL://kafka:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      # - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      # - KAFKA_CFG_NUM_PARTITIONS=2
  rabbitmq:
    image: docker.io/bitnami/rabbitmq:latest
    hostname: rabbitmq
    ports:
      - '4369:4369'
      - '5551:5551'
      - '5552:5552'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    environment:
      - RABBITMQ_USERNAME=bitnami
      - RABBITMQ_PASSWORD=bitnami
      - RABBITMQ_SECURE_PASSWORD=yes
      - RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS=yes
    volumes:
      - 'rabbitmq_data:/bitnami/rabbitmq/mnesia'
  mysql:
    image: mysql:8
    hostname: mysql
    restart: always
    environment:
      MYSQL_DATABASE: "patrondb"
      MYSQL_USER: "patron"
      MYSQL_PASSWORD: "test123"
      MYSQL_ROOT_PASSWORD: "test123"
      TIMEZONE: UTC
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - mysql_data:/var/lib/mysql
  redis:
    image: docker.io/bitnami/redis:6.2
    hostname: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - "redis_data:/bitnami/redis/data"
  localstack:
    image: localstack/localstack:latest
    hostname: localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  hivemq:
    image: hivemq/hivemq4:latest
    hostname: hivemq
    restart: always
    ports:
      - target: 1883
        published: 1883
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    environment:
      HIVEMQ_CONTROL_CENTER_USER: "admin"
      HIVEMQ_CONTROL_CENTER_PASSWORD: "123456"
      HIVEMQ_CLUSTER_TRANSPORT_TYPE: "TCP"
  mongo:
    image: mongo:5
    hostname: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
volumes:
  rabbitmq_data:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local
