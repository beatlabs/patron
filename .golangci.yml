run:
  timeout: 5m
  issues-exit-code: 1
  tests: true

  modules-download-mode: vendor

  # list of build tags, all linters use it. Default is empty list
  build-tags:
    - integration

# output configuration options
output:
  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  uniq-by-line: false

linters:
  disable-all: true
  enable:
    - gofmt
    - gosimple
    - unparam
    - goconst
    - prealloc
    - stylecheck
    - unconvert
    - unused
    - staticcheck
    - ineffassign
    - gosec
    - tparallel
    - whitespace
    - revive
    - godot
    - errorlint
    - gocritic
    - errname
    - govet
    - predeclared
    - nestif
    - exhaustive
    - tenv
    - gofumpt
    - forcetypeassert
    - nilerr
    - errcheck
    - bodyclose
    - goimports
    - durationcheck
    - errchkjson
    - sloglint
    - dupword
    - noctx
    - makezero
    - nilnil
    - reassign
    - sloglint
    - spancheck
    - testifylint
    - wastedassign
    # - wsl
    #- wrapcheck
  fast: false


# containedctx 	Containedctx is a linter that detects struct contained context.Context field.	style		1.44.0	
# contextcheck 	Check whether the function uses a non-inherited context.	bugs		v1.43.0	
# copyloopvar 	Copyloopvar is a linter detects places where loop variables are copied.	style		v1.57.0	
# cyclop 	Checks function and package cyclomatic complexity.	complexity		v1.37.0	
# decorder 	Check declaration order and count of types, constants, variables and functions.	format, style		v1.44.0	
# depguard 	Go linter that checks if package imports are in a list of acceptable packages.	style, import, module		v1.4.0	
# dogsled 	Checks assignments with too many blank identifiers (e.g. x, , , _, := f()).	style		v1.19.0	
# dupl 	Tool for code clone detection.	style		v1.0.0	
# exhaustruct 	Checks if all structure fields are initialized.	style, test		v1.46.0	
# dupword 	Checks for duplicate words in the source code.	comment		1.50.0	
# execinquery 	Execinquery is a linter about query string checker in Query function which reads your Go src files and warning it finds.	sql		v1.46.0	
# importas 	Enforces consistent import aliases.	style		v1.38.0	

# exportloopref 	Checks for pointers to enclosing loop variables.	bugs		v1.28.0	
# forbidigo 	Forbids identifiers.	style		v1.34.0	
# funlen 	Tool for detection of long functions.	complexity		v1.18.0	
# gci 	Gci controls Go package import order and makes it always deterministic.	format, import	✔	v1.30.0	
# gocheckcompilerdirectives 	Checks that go compiler directive comments (//go:) are valid.	bugs		v1.51.0	
# gochecknoglobals 	Check that no global variables exist.	style		v1.12.0	
# gochecknoinits	Checks that no init functions are present in Go code.	style		v1.12.0	
# gocognit 	Computes and checks the cognitive complexity of functions.	complexity		v1.20.0	
# Extensible without recompilation through dynamic rules.
# Dynamic rules are written declaratively with AST patterns, filters, report message and optional suggestion.	style, metalinter	✔	v1.12.0	
# gocyclo 	Computes and checks the cyclomatic complexity of functions.	complexity		v1.0.0	
# godox 	Tool for detection of FIXME, TODO and other comment keywords.	style, comment		v1.19.0	
# goheader 	Checks is file header matches to pattern.	style	✔	v1.28.0	
# gomnd 	An analyzer to detect magic numbers.	style		v1.22.0	
# gomoddirectives 	Manage the use of 'replace', 'retract', and 'excludes' directives in go.mod.	style, module		v1.39.0	
# gomodguard 	Allow and block list linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations.	style, import, module		v1.25.0	
# goprintffuncname 	Checks that printf-like functions are named with f at the end.	style		v1.23.0	
# gosmopolitan 	Report certain i18n/l10n anti-patterns in your Go codebase.	bugs		v1.53.0	
# grouper 	Analyze expression groups.	style		v1.44.0	

# interfacebloat 	A linter that checks the number of methods inside an interface.	style		v1.49.0	
# intrange 	Intrange is a linter to find places where for loops could make use of an integer range.			v1.57.0	
# ireturn 	Accept Interfaces, Return Concrete Types.	style		v1.43.0	
# lll	Reports long lines.	style		v1.8.0	
# maintidx 	Maintidx measures the maintainability index of each function.	complexity		v1.44.0	
# mirror 	Reports wrong mirror patterns of bytes/strings usage.	style	✔	v1.53.0	
# musttag 	Enforce field tags in (un)marshaled structs.	style, bugs		v1.51.0	
# nakedret 	Checks that functions with naked returns are not longer than a maximum size (can be zero).	style		v1.19.0	
# nlreturn 	Nlreturn checks for a new line before return and branch statements to increase code clarity.	style		v1.30.0	
# nolintlint 	Reports ill-formed or insufficient nolint directives.	style	✔	v1.26.0	
# nonamedreturns 	Reports all named returns.	style		v1.46.0	
# nosprintfhostport 	Checks for misuse of Sprintf to construct a host with port in a URL.	style		v1.46.0	
# paralleltest 	Detects missing usage of t.Parallel() method in your Go test.	style, test		v1.33.0	
# perfsprint 	Checks that fmt.Sprintf can be replaced with a faster alternative.	performance		v1.55.0	
# protogetter 	Reports direct reads from proto message fields when getters should be used.	bugs	✔	v1.55.0	
# rowserrcheck 	Checks whether Rows.Err of rows is checked successfully.	bugs, sql		v1.23.0	
# sqlclosecheck 	Checks that sql.Rows, sql.Stmt, sqlx.NamedStmt, pgx.Query are closed.	bugs, sql		v1.28.0	
# tagalign 	Check that struct tags are well aligned.	style, format	✔	v1.53.0	
# tagliatelle 	Checks the struct tags.	style		v1.40.0	
# testableexamples 	Linter checks if examples are testable (have an expected output).	test		v1.50.0	
# testifylint 	Checks usage of github.com/stretchr/testify.	test, bugs		v1.55.0	
# testpackage 	Linter that makes you use a separate _test package.	style, test		v1.25.0	
# thelper 	Thelper detects tests helpers which is not start with t.Helper() method.	style		v1.34.0	
# usestdlibvars 	A linter that detect the possibility to use variables/constants from the Go standard library.	style		v1.48.0	
# varnamelen 	Checks that the length of a variable's name matches its scope.	style		v1.43.0	
# wastedassign 	Finds wasted assignment statements.	style		v1.38.0	




issues:
  exclude-dirs:
    - vendor
  max-same-issues: 10

  exclude-rules:
    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA1019:"
